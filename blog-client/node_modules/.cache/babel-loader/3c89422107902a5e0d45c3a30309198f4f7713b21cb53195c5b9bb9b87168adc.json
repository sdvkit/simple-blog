{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-search\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  style: {\n    width: '300px',\n    textAlign: 'center'\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_InputText = _resolveComponent(\"InputText\");\n  const _component_Avatar = _resolveComponent(\"Avatar\");\n  const _component_Column = _resolveComponent(\"Column\");\n  const _component_DataTable = _resolveComponent(\"DataTable\");\n  const _component_OverlayPanel = _resolveComponent(\"OverlayPanel\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_InputText, {\n    type: \"text\",\n    modelValue: $data.searchValue,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchValue = $event),\n    placeholder: \"Search author\",\n    style: {\n      width: '180px',\n      marginRight: '5px'\n    },\n    onKeydown: $options.toggleSearch\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onKeydown\"]), _createVNode(_component_OverlayPanel, {\n    ref: \"op\",\n    appendTo: \"body\",\n    id: \"overlay_panel\",\n    style: {\n      \"width\": \"450px\"\n    },\n    breakpoints: {\n      '960px': '75vw'\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_DataTable, {\n      value: $data.posts,\n      scrollable: true,\n      scrollHeight: \"350px\",\n      lazy: true,\n      \"row-style\": {\n        cursor: 'pointer'\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Column, {\n        header: \"Results:\"\n      }, {\n        body: _withCtx(slotProps => [_createElementVNode(\"div\", {\n          onClick: $event => $options.getProfile(slotProps.data.author)\n        }, [_createVNode(_component_Avatar, {\n          class: \"mr-2\",\n          size: \"large\",\n          style: _normalizeStyle({\n            background: 'url(\\'' + slotProps.data.icon + '\\') center no-repeat',\n            color: '#ffffff',\n            height: '50px',\n            width: '50px',\n            backgroundSize: '70px',\n            border: '3px solid #ffffff',\n            float: 'left'\n          }),\n          shape: \"circle\"\n        }, null, 8 /* PROPS */, [\"style\"]), _createElementVNode(\"p\", _hoisted_3, _toDisplayString(slotProps.data.author + '123@gmail.com'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2)]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"value\"])]),\n    _: 1 /* STABLE */\n  }, 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAA0B;EAAvBC,KAAK,EAAC;AAAc;;;EAmBTC,KAAK,EAAE;IAAAC;IAAAC;EAAA;AAAuC;;;;;;;6DAnB5DC,UAA0B,EAC1BC,aAGmCC;IAHxBC,IAAI,EAAC,MAAM;gBAAUC,iBAAW;+DAAXA,iBAAW;IAAEC,WAAW,EAAC,eAAe;IAAER,KAAK,EAAE;;;KAG1E;IAAGS,SAAO,EAAEC;wDACnBN,aAqBeO;IArBDC,GAAG,EAAC,IAAI;IAACC,QAAQ,EAAC,MAAM;IAACC,EAAE,EAAC,eAAe;IAACd,KAAoB,EAApB;MAAA;IAAA,CAAoB;IAAEe,WAAW,EAAE;MAAA;IAAA;;sBAC3F,MAmBY,CAnBZX,aAmBYY;MAnBAC,KAAK,EAAEV,WAAK;MAAGW,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAC,OAAO;MAAEC,IAAI,EAAE,IAAI;MAAG,WAAS,EAAE;QAAAC;MAAA;;wBACzF,MAiBS,CAjBTjB,aAiBSkB;QAjBDC,MAAM,EAAC;MAAU;QACZC,IAAI,WAAEC,SAAS,KACxB3B,oBAaM;UAbA4B,OAAK,YAAEhB,mBAAU,CAACe,SAAS,CAACE,IAAI,CAACC,MAAM;YAC3CxB,aAQuByB;UARf9B,KAAK,EAAC,MAAM;UAAC+B,IAAI,EAAC,OAAO;UAAE9B,KAAK;mCAA6CyB,SAAS,CAACE,IAAI,CAACI,IAAI;;;;;;;;UAQjGC,KAAK,EAAC;4CACblC,oBAEI,KAFJmC,UAEI,mBADCR,SAAS,CAACE,IAAI,CAACC,MAAM","names":["_createElementVNode","class","style","width","textAlign","_hoisted_1","_createVNode","_component_InputText","type","$data","placeholder","onKeydown","$options","_component_OverlayPanel","ref","appendTo","id","breakpoints","_component_DataTable","value","scrollable","scrollHeight","lazy","cursor","_component_Column","header","body","slotProps","onClick","data","author","_component_Avatar","size","icon","shape","_hoisted_3"],"sourceRoot":"","sources":["/Users/nikitasudaev/WebstormProjects/blog-client/src/components/Search.vue"],"sourcesContent":["<template>\n  <i class=\"pi pi-search\" />\n  <InputText type=\"text\" v-model=\"searchValue\" placeholder=\"Search author\" :style=\"{\n          width: '180px',\n          marginRight: '5px'\n        }\" @keydown=\"toggleSearch\" />\n  <OverlayPanel ref=\"op\" appendTo=\"body\" id=\"overlay_panel\" style=\"width: 450px\" :breakpoints=\"{'960px': '75vw'}\">\n    <DataTable :value=\"posts\" :scrollable=\"true\" scrollHeight=\"350px\" :lazy=\"true\" :row-style=\"{ cursor: 'pointer' }\">\n      <Column header=\"Results:\">\n        <template #body=\"slotProps\">\n          <div @click=\"getProfile(slotProps.data.author)\">\n            <Avatar class=\"mr-2\" size=\"large\" :style=\"{\n                  background: 'url(\\'' + slotProps.data.icon + '\\') center no-repeat',\n                  color: '#ffffff',\n                  height: '50px',\n                  width: '50px',\n                  backgroundSize: '70px',\n                  border: '3px solid #ffffff',\n                  float: 'left'\n                }\" shape=\"circle\"/>\n            <p :style=\"{ width: '300px', textAlign: 'center' }\">\n              {{ slotProps.data.author + '123@gmail.com' }}\n            </p>\n          </div>\n        </template>\n      </Column>\n    </DataTable>\n  </OverlayPanel>\n</template>\n\n<script>\nimport OverlayPanel from \"primevue/overlaypanel\";\nimport DataTable from \"primevue/datatable\";\nimport Column from \"primevue/column\";\nimport Avatar from \"primevue/avatar\";\nimport posts from '../../posts.json';\nimport InputText from \"primevue/inputtext\";\n\nexport default {\n  name: \"search-element\",\n  data() {\n    return {\n      searchValue: '',\n      posts\n    }\n  },\n  methods: {\n    getProfile(name) {\n      document.location.href= `/${name}`;\n    },\n    toggleSearch(event) {\n      this.$refs.op.toggle(event);\n    },\n  },\n  components: {\n    OverlayPanel,\n    DataTable,\n    Column,\n    Avatar,\n    InputText\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}